{"ast":null,"code":"import { useMemo } from 'react';\nimport useToggle from '../useToggle';\nexport default function useBoolean() {\n  let defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const [state, {\n    toggle,\n    set\n  }] = useToggle(defaultValue);\n  const actions = useMemo(() => {\n    const setTrue = () => set(true);\n    const setFalse = () => set(false);\n    return {\n      toggle,\n      set: v => set(!!v),\n      setTrue,\n      setFalse\n    };\n  }, []);\n  return [state, actions];\n}","map":{"version":3,"names":["useMemo","useToggle","useBoolean","defaultValue","arguments","length","undefined","state","toggle","set","actions","setTrue","setFalse","v"],"sources":["/Users/mac/Documents/store/my-app/node_modules/ahooks/es/useBoolean/index.js"],"sourcesContent":["import { useMemo } from 'react';\nimport useToggle from '../useToggle';\nexport default function useBoolean(defaultValue = false) {\n  const [state, {\n    toggle,\n    set\n  }] = useToggle(defaultValue);\n  const actions = useMemo(() => {\n    const setTrue = () => set(true);\n    const setFalse = () => set(false);\n    return {\n      toggle,\n      set: v => set(!!v),\n      setTrue,\n      setFalse\n    };\n  }, []);\n  return [state, actions];\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,SAAS,MAAM,cAAc;AACpC,eAAe,SAASC,UAAUA,CAAA,EAAuB;EAAA,IAAtBC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EACrD,MAAM,CAACG,KAAK,EAAE;IACZC,MAAM;IACNC;EACF,CAAC,CAAC,GAAGR,SAAS,CAACE,YAAY,CAAC;EAC5B,MAAMO,OAAO,GAAGV,OAAO,CAAC,MAAM;IAC5B,MAAMW,OAAO,GAAGA,CAAA,KAAMF,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMG,QAAQ,GAAGA,CAAA,KAAMH,GAAG,CAAC,KAAK,CAAC;IACjC,OAAO;MACLD,MAAM;MACNC,GAAG,EAAEI,CAAC,IAAIJ,GAAG,CAAC,CAAC,CAACI,CAAC,CAAC;MAClBF,OAAO;MACPC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACL,KAAK,EAAEG,OAAO,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}