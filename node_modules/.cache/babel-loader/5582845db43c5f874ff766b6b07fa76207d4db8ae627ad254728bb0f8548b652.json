{"ast":null,"code":"import { useRef } from 'react';\nimport useUpdateEffect from '../../../useUpdateEffect';\n// support refreshDeps & ready\nconst useAutoRunPlugin = (fetchInstance, _ref) => {\n  let {\n    manual,\n    ready = true,\n    defaultParams = [],\n    refreshDeps = [],\n    refreshDepsAction\n  } = _ref;\n  const hasAutoRun = useRef(false);\n  hasAutoRun.current = false;\n  useUpdateEffect(() => {\n    if (!manual && ready) {\n      hasAutoRun.current = true;\n      fetchInstance.run(...defaultParams);\n    }\n  }, [ready]);\n  useUpdateEffect(() => {\n    if (hasAutoRun.current) {\n      return;\n    }\n    if (!manual) {\n      hasAutoRun.current = true;\n      if (refreshDepsAction) {\n        refreshDepsAction();\n      } else {\n        fetchInstance.refresh();\n      }\n    }\n  }, [...refreshDeps]);\n  return {\n    onBefore: () => {\n      if (!ready) {\n        return {\n          stopNow: true\n        };\n      }\n    }\n  };\n};\nuseAutoRunPlugin.onInit = _ref2 => {\n  let {\n    ready = true,\n    manual\n  } = _ref2;\n  return {\n    loading: !manual && ready\n  };\n};\nexport default useAutoRunPlugin;","map":{"version":3,"names":["useRef","useUpdateEffect","useAutoRunPlugin","fetchInstance","_ref","manual","ready","defaultParams","refreshDeps","refreshDepsAction","hasAutoRun","current","run","refresh","onBefore","stopNow","onInit","_ref2","loading"],"sources":["/Users/mac/Documents/store/my-app/node_modules/ahooks/es/useRequest/src/plugins/useAutoRunPlugin.js"],"sourcesContent":["import { useRef } from 'react';\nimport useUpdateEffect from '../../../useUpdateEffect';\n// support refreshDeps & ready\nconst useAutoRunPlugin = (fetchInstance, {\n  manual,\n  ready = true,\n  defaultParams = [],\n  refreshDeps = [],\n  refreshDepsAction\n}) => {\n  const hasAutoRun = useRef(false);\n  hasAutoRun.current = false;\n  useUpdateEffect(() => {\n    if (!manual && ready) {\n      hasAutoRun.current = true;\n      fetchInstance.run(...defaultParams);\n    }\n  }, [ready]);\n  useUpdateEffect(() => {\n    if (hasAutoRun.current) {\n      return;\n    }\n    if (!manual) {\n      hasAutoRun.current = true;\n      if (refreshDepsAction) {\n        refreshDepsAction();\n      } else {\n        fetchInstance.refresh();\n      }\n    }\n  }, [...refreshDeps]);\n  return {\n    onBefore: () => {\n      if (!ready) {\n        return {\n          stopNow: true\n        };\n      }\n    }\n  };\n};\nuseAutoRunPlugin.onInit = ({\n  ready = true,\n  manual\n}) => {\n  return {\n    loading: !manual && ready\n  };\n};\nexport default useAutoRunPlugin;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,eAAe,MAAM,0BAA0B;AACtD;AACA,MAAMC,gBAAgB,GAAGA,CAACC,aAAa,EAAAC,IAAA,KAMjC;EAAA,IANmC;IACvCC,MAAM;IACNC,KAAK,GAAG,IAAI;IACZC,aAAa,GAAG,EAAE;IAClBC,WAAW,GAAG,EAAE;IAChBC;EACF,CAAC,GAAAL,IAAA;EACC,MAAMM,UAAU,GAAGV,MAAM,CAAC,KAAK,CAAC;EAChCU,UAAU,CAACC,OAAO,GAAG,KAAK;EAC1BV,eAAe,CAAC,MAAM;IACpB,IAAI,CAACI,MAAM,IAAIC,KAAK,EAAE;MACpBI,UAAU,CAACC,OAAO,GAAG,IAAI;MACzBR,aAAa,CAACS,GAAG,CAAC,GAAGL,aAAa,CAAC;IACrC;EACF,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EACXL,eAAe,CAAC,MAAM;IACpB,IAAIS,UAAU,CAACC,OAAO,EAAE;MACtB;IACF;IACA,IAAI,CAACN,MAAM,EAAE;MACXK,UAAU,CAACC,OAAO,GAAG,IAAI;MACzB,IAAIF,iBAAiB,EAAE;QACrBA,iBAAiB,EAAE;MACrB,CAAC,MAAM;QACLN,aAAa,CAACU,OAAO,EAAE;MACzB;IACF;EACF,CAAC,EAAE,CAAC,GAAGL,WAAW,CAAC,CAAC;EACpB,OAAO;IACLM,QAAQ,EAAEA,CAAA,KAAM;MACd,IAAI,CAACR,KAAK,EAAE;QACV,OAAO;UACLS,OAAO,EAAE;QACX,CAAC;MACH;IACF;EACF,CAAC;AACH,CAAC;AACDb,gBAAgB,CAACc,MAAM,GAAGC,KAAA,IAGpB;EAAA,IAHqB;IACzBX,KAAK,GAAG,IAAI;IACZD;EACF,CAAC,GAAAY,KAAA;EACC,OAAO;IACLC,OAAO,EAAE,CAACb,MAAM,IAAIC;EACtB,CAAC;AACH,CAAC;AACD,eAAeJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}